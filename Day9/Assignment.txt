1. Program to check if person is eligible to vote or not.
int[] arr = {2, 5, 1, 4, 0, 7};
int quotient = arr[7] / arr[4];
Develop a Java program which handles any unexpected situations that may arise during execution.
‌
2. Demonstrate multiple catch blocks: accept two numbers as strings, then convert them to integers, and perform division, and catch the following exceptions: InputMismatchException, NumberFormatException, ArithmeticException and Exception.
‌
3. Write a program to illustrate how to throw a ClassNotFoundException.
‌
4. Write a method to parse a string to an integer. Throw an exception if the string is not a valid number. Handle it using try-catch.
‌
5. Create a program where try block contains a return statement. Ensure that finally block executes before the method returns. Show this with output.
‌

6. Write a Java program to accept a 4-digit ATM PIN from the user and validate whether it meets the following conditions:
--->It must be exactly 4 digits long.
--->It should contain only numeric characters.
--->It must not start with 0.
Display an appropriate message whether the PIN is valid or invalid.
‌
7. Write a Java program that shows exception propagation across multiple methods (method1 calls method2 calls method3, which throws the exception). Handle the exception in method1.
‌
8. Design a login system that throws AuthenticationException if the username or password is incorrect. Handle it and display a login failure message.
‌
9. Create a method to read a file from disk. Handle FileNotFoundException and IOException using try-catch-finally.
‌
10. Write a Java program to manage a voting system where a person must be at least 18 years old to be eligible to vote. Use a custom exception to handle the scenario when an ineligible person tries to register for voting. 
Display appropriate messages for eligible and ineligible voters.